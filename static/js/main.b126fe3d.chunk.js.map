{"version":3,"sources":["reducers/messages.js","reducers/user.js","reducers/settings.js","reducers/index.js","helpers/currentDate.js","pages/Home/components/MsgSender.jsx","pages/Home/components/MsgSenderContainer.jsx","pages/Home/actions.js","components/LinkButton.jsx","components/DrawerContent.jsx","components/NavigationDrawer.jsx","components/ApplicationBar.jsx","pages/Home/components/Home.jsx","pages/Home/index.js","components/NavigationDrawerContainer.jsx","actions/settings.js","components/ApplicationBarContainer.jsx","components/Message.jsx","pages/Board/components/MessagesList.jsx","pages/Board/components/MessagesListContainer.jsx","pages/Board/components/Board.jsx","pages/Board/index.js","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","messages","text","date","author","receiver","authorized","login","showDrawer","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","message","user","settings","currentDate","Date","toLocaleDateString","year","month","day","hour","minute","second","MessageSender","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","currentTarget","value","handleSubmit","_this$props","sendMessage","classes","react_default","a","createElement","className","content","toolbar","TextField_default","onChange","fullWidth","id","label","margin","Button_default","variant","color","onClick","Component","withStyles","theme","root","position","left","top","transform","display","flexDirection","alignItems","border","padding","borderRadius","minWidth","flexGrow","spacing","unit","mixins","connect","dispatch","MsgSender","LinkButton","_ref","name","path","ListItem_default","button","component","Link","to","ListItemText_default","primary","Divider_default","List_default","components_LinkButton","drawer","defineProperty","breakpoints","up","width","flexShrink","drawerPaper","show","switchDrawer","Hidden_default","xsDown","implementation","Drawer_default","open","paper","components_DrawerContent","smUp","onClose","marginLeft","header","menuButton","marginRight","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","components_ApplicationBar","components_NavigationDrawer","MsgSenderContainer","pages_Home","components","NavigationDrawer","ApplicationBar","justifyContent","forYou","backgroundColor","Paper_default","isMessageForYou","map","components_Message","key","renderMessages","MessagesList","ApplicationBarContainer","NavigationDrawerContainer","MessagesListContainer","pages_Board","NotFound","App","Switch","Route","exact","Home","Board","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b126fe3d.chunk.js","sourcesContent":["export const initialState = {\n  messages: [\n    {\n      text: 'Hi dude!',\n      date: '9 нояб. 2018 г., 14:49:24',\n      author: 'Den',\n      receiver: 'Stanislav',\n    },\n    {\n      text: 'Hello dude!',\n      date: '9 нояб. 2018 г., 14:49:25',\n      author: 'Jack',\n      receiver: 'Den',\n    },\n  ],\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'SEND_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      }\n    default:\n      return state\n  }\n}\n","export const initialState = {\n  authorized: true,\n  login: 'Stanislav',\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'LOG_IN':\n      return {\n        state,\n      }\n    default:\n      return state\n  }\n}\n","export const initialState = {\n  showDrawer: false,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'SWITCH_DRAWER':\n      return {\n        showDrawer: !state.showDrawer,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport messages from './messages'\nimport user from './user'\nimport settings from './settings'\n\nexport default combineReducers({\n  messages: messages,\n  user: user,\n  settings: settings,\n})\n","export default function() {\n  const date = new Date()\n  const params = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }\n  return date.toLocaleDateString('ru', params)\n}\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport currentDate from '../../../helpers/currentDate'\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    border: '1px solid #888',\n    padding: 20,\n    borderRadius: 5,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nclass MessageSender extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      message: e.currentTarget.value,\n    })\n  }\n\n  handleSubmit = () => {\n    const { sendMessage, login } = this.props\n    const { message } = this.state\n    sendMessage({\n      text: message,\n      date: currentDate(),\n      author: login,\n      receiver: null,\n    })\n    this.setState({\n      message: '',\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { message } = this.state\n    return (\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n        <TextField\n          onChange={this.handleChange}\n          fullWidth\n          id=\"standard-required\"\n          label=\"Текст сообщения\"\n          margin=\"normal\"\n          value={message}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\n          Отправить\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(MessageSender)\n","import { connect } from 'react-redux'\nimport { sendMessage } from '../actions'\nimport MsgSender from './MsgSender'\n\nconst mapStateToProps = state => ({\n  login: state.user.login,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => dispatch(sendMessage(message)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MsgSender)\n","export const sendMessage = message => ({\n  type: 'SEND_MESSAGE',\n  message,\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LinkButton = ({ name, path }) => {\n  return (\n    <ListItem button component={Link} to={path}>\n      <ListItemText primary={name} />\n    </ListItem>\n  )\n}\n\nexport default LinkButton\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport LinkButton from './LinkButton'\nimport List from '@material-ui/core/List'\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n})\n\nconst DrawerContent = ({ classes }) => {\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List component=\"nav\">\n        <LinkButton name=\"Написать сообщение\" path=\"/\" />\n        <LinkButton name=\"Все сообщения\" path=\"/board\" />\n        <LinkButton name=\"Ответы\" path=\"/\" />\n      </List>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DrawerContent)\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport { withStyles } from '@material-ui/core/styles'\nimport DrawerContent from './DrawerContent'\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: 300,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: 300,\n  },\n})\n\nconst NavigationDrawer = ({ classes, show, switchDrawer }) => {\n  return (\n    <div className={classes.drawer}>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={show}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={switchDrawer}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NavigationDrawer)\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    marginLeft: 300,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${300}px)`,\n    },\n  },\n  header: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n})\n\nconst ApplicationBar = ({ classes, switchDrawer }) => {\n  return (\n    <AppBar className={classes.root} position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          className={classes.menuButton}\n          onClick={switchDrawer}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.header}>\n          Messages\n        </Typography>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default withStyles(styles)(ApplicationBar)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport MsgSenderContainer from './MsgSenderContainer'\nimport NavigationDrawer from '../../../components/NavigationDrawer'\nimport ApplicationBar from '../../../components/ApplicationBar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Home = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MsgSenderContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Home)\n","import * as components from './components'\n\nexport default { components }\n","import { connect } from 'react-redux'\nimport NavigationDrawer from './NavigationDrawer'\nimport { switchDrawer } from '../actions/settings'\n\nconst mapStateToProps = state => ({\n  show: state.settings.showDrawer,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchDrawer: () => dispatch(switchDrawer()),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavigationDrawer)\n","export const switchDrawer = () => ({\n  type: 'SWITCH_DRAWER',\n})\n","import { connect } from 'react-redux'\nimport { switchDrawer } from '../actions/settings'\nimport ApplicationBar from './ApplicationBar'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchDrawer: () => dispatch(switchDrawer()),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ApplicationBar)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n  root: {\n    margin: 5,\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  forYou: {\n    margin: 5,\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#b2d8b3',\n  },\n}\n\nconst Message = ({ message, classes, forYou }) => {\n  return (\n    <Paper className={forYou ? classes.forYou : classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"h6\">{message.author}</Typography>\n        <Typography variant=\"caption\">{message.date}</Typography>\n      </div>\n      <Typography variant=\"headline\">\n        {message.receiver ? `${message.receiver}, ` : undefined}\n        {message.text}\n      </Typography>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(Message)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Message from '../../../components/Message'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nconst renderMessages = (messages, receiver) => {\n  return messages.map(message => {\n    if (isMessageForYou(message.receiver, receiver)) {\n      return <Message key={message.date} message={message} forYou />\n    } else {\n      return <Message key={message.date} message={message} />\n    }\n  })\n}\n\nconst isMessageForYou = (receiver, user) => (receiver === user ? true : false)\n\nconst MessagesList = ({ classes, messages, receiver }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      <div>{renderMessages(messages, receiver)}</div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(MessagesList)\n","import { connect } from 'react-redux'\nimport MessagesList from './MessagesList'\n\nconst mapStateToProps = state => ({\n  messages: state.messages.messages,\n  receiver: state.user.login,\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(MessagesList)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavigationDrawer from '../../../components/NavigationDrawerContainer'\nimport ApplicationBar from '../../../components/ApplicationBarContainer'\nimport MessagesListContainer from './MessagesListContainer'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Board = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MessagesListContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Board)\n","import * as components from './components'\n\nexport default { components }\n","import React from 'react'\n\nconst NotFound = () => {\n  return <div>NotFound</div>\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router'\nimport Home from './pages/Home'\nimport Board from './pages/Board'\nimport NotFound from './components/NotFound'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Home.components.Home} />\n          <Route exact path=\"/board\" component={Board.components.Board} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}