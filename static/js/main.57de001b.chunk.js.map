{"version":3,"sources":["reducers/messages.js","reducers/index.js","pages/Home/components/MsgSender.jsx","pages/Home/components/MsgSenderContainer.jsx","pages/Home/actions.js","components/LinkButton.jsx","components/DrawerContent.jsx","components/NavigationDrawer.jsx","components/ApplicationBar.jsx","pages/Home/components/Home.jsx","pages/Home/index.js","components/Message.jsx","pages/Board/components/MessagesList.jsx","pages/Board/components/MessagesListContainer.jsx","pages/Board/components/Board.jsx","pages/Board/index.js","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","messages","text","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","message","MessageSender","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","currentTarget","value","handleSubmit","sendMessage","_this$state","recipient","classes","react_default","a","createElement","className","content","toolbar","TextField_default","onChange","fullWidth","id","label","margin","Button_default","variant","color","onClick","Component","withStyles","theme","root","position","left","top","transform","display","flexDirection","alignItems","border","padding","borderRadius","minWidth","flexGrow","spacing","unit","mixins","connect","dispatch","MsgSender","LinkButton","_ref","name","path","ListItem_default","button","component","Link","to","ListItemText_default","primary","Divider_default","List_default","components_LinkButton","drawer","defineProperty","breakpoints","up","width","flexShrink","drawerPaper","open","Hidden_default","xsDown","implementation","Drawer_default","paper","components_DrawerContent","smUp","marginLeft","header","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","components_ApplicationBar","components_NavigationDrawer","MsgSenderContainer","pages_Home","components","Paper_default","marginTop","map","components_Message","key","renderMessages","MessagesList","MessagesListContainer","pages_Board","NotFound","App","Switch","Route","exact","Home","Board","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57de001b.chunk.js","sourcesContent":["export const initialState = {\n  messages: [{ text: 'asssssssssssdasdasd' }],\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'SEND_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport messages from './messages'\n\nexport default combineReducers({\n  messages: messages,\n})\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    border: '1px solid #888',\n    padding: 20,\n    borderRadius: 5,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nclass MessageSender extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n      recipient: null,\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      message: e.currentTarget.value,\n    })\n  }\n\n  handleSubmit = () => {\n    const { sendMessage } = this.props\n    const { message, recipient } = this.state\n    sendMessage({\n      text: message,\n      recipient: recipient,\n    })\n    this.setState({\n      message: '',\n      recipient: null,\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { message } = this.state\n    return (\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n        <TextField\n          onChange={this.handleChange}\n          fullWidth\n          id=\"standard-required\"\n          label=\"Текст сообщения\"\n          margin=\"normal\"\n          value={message}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\n          Отправить\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(MessageSender)\n","import { connect } from 'react-redux'\nimport { sendMessage } from '../actions'\nimport MsgSender from './MsgSender'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => dispatch(sendMessage(message)),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MsgSender)\n","export const sendMessage = message => ({\n  type: 'SEND_MESSAGE',\n  message,\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LinkButton = ({ name, path }) => {\n  return (\n    <ListItem\n      button\n      component={Link}\n      to={path}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      <ListItemText primary={name} />\n    </ListItem>\n  )\n}\n\nexport default LinkButton\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport LinkButton from './LinkButton'\nimport List from '@material-ui/core/List'\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n})\n\nconst DrawerContent = ({ classes }) => {\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List component=\"nav\">\n        <LinkButton name=\"Написать сообщение\" path=\"/\" />\n        <LinkButton name=\"Все сообщения\" path=\"/board\" />\n        <LinkButton name=\"Ответы\" path=\"/\" />\n      </List>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DrawerContent)\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport { withStyles } from '@material-ui/core/styles'\nimport DrawerContent from './DrawerContent'\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: 300,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: 300,\n  },\n})\n\nconst NavigationDrawer = ({ classes, open }) => {\n  return (\n    <div className={classes.drawer}>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NavigationDrawer)\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    marginLeft: 300,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${300}px)`,\n    },\n  },\n  header: {\n    flexGrow: 1,\n  },\n})\n\nconst ApplicationBar = ({ classes }) => {\n  return (\n    <AppBar className={classes.root} position=\"fixed\">\n      <Toolbar>\n        <IconButton color=\"inherit\" aria-label=\"Menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.header}>\n          Messages\n        </Typography>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default withStyles(styles)(ApplicationBar)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport MsgSenderContainer from './MsgSenderContainer'\nimport NavigationDrawer from '../../../components/NavigationDrawer'\nimport ApplicationBar from '../../../components/ApplicationBar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Home = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MsgSenderContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Home)\n","import * as components from './components'\n\nexport default { components }\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = {\n  root: {\n    margin: 5,\n    padding: 10,\n  },\n}\n\nconst Message = ({ text, classes }) => {\n  return (\n    <Paper className={classes.root}>\n      <Typography component=\"p\">{text}</Typography>\n      <Button>Response</Button>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(Message)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Message from '../../../components/Message'\n\nconst styles = {\n  root: {\n    marginTop: 60,\n  },\n}\n\nconst renderMessages = messages => {\n  return messages.map(message => (\n    <Message key={message.text} text={message.text} />\n  ))\n}\n\nconst MessagesList = ({ messages, classes }) => {\n  return <div className={classes.root}>{renderMessages(messages)}</div>\n}\n\nexport default withStyles(styles)(MessagesList)\n","import { connect } from 'react-redux'\nimport MessagesList from './MessagesList'\n\nconst mapStateToProps = state => ({\n  messages: state.messages.messages,\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(MessagesList)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavigationDrawer from '../../../components/NavigationDrawer'\nimport ApplicationBar from '../../../components/ApplicationBar'\nimport MessagesListContainer from './MessagesListContainer'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Board = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MessagesListContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Board)\n","import * as components from './components'\n\nexport default { components }\n","import React from 'react'\n\nconst NotFound = () => {\n  return <div>NotFound</div>\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router'\nimport Home from './pages/Home'\nimport Board from './pages/Board'\nimport NotFound from './components/NotFound'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Home.components.Home} />\n          <Route exact path=\"/board\" component={Board.components.Board} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}