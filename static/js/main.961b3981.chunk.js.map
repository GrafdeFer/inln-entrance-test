{"version":3,"sources":["reducers/messages.js","reducers/user.js","reducers/settings.js","reducers/index.js","helpers/currentDate.js","pages/Home/components/Messenger.jsx","pages/Home/components/MessengerContainer.jsx","pages/Home/actions.js","components/LinkButton.jsx","components/DrawerContent.jsx","components/NavigationDrawer.jsx","components/NavigationDrawerContainer.jsx","actions/settings.js","components/ApplicationBar.jsx","components/ApplicationBarContainer.jsx","pages/Home/components/Home.jsx","pages/Home/index.js","components/Message.jsx","components/MessageContainer.jsx","actions/message.js","pages/Board/components/MessagesList.jsx","pages/Board/components/MessagesListContainer.jsx","pages/Board/components/Board.jsx","pages/Board/index.js","pages/Answers/components/Answers.jsx","pages/Answers/components/AnswersContainer.jsx","pages/Answers/index.js","pages/Login/actions.js","pages/Login/components/Login.jsx","pages/Login/components/LoginContainer.jsx","helpers/login.js","pages/Login/index.js","components/NotFound.jsx","components/PrivateRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","messages","text","date","author","receiver","authorized","login","showDrawer","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","message","user","payload","token","settings","currentDate","Date","toLocaleDateString","year","month","day","hour","minute","second","MessageSender","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","currentTarget","value","handleSubmit","_this$props","sendMessage","classes","react_default","a","createElement","className","content","toolbar","TextField_default","onChange","fullWidth","id","label","margin","Button_default","variant","color","onClick","Component","withStyles","theme","flexGrow","padding","spacing","unit","mixins","connect","dispatch","Messenger","LinkButton","_ref","name","path","location","window","hash","ListItem_default","selected","button","component","Link","to","ListItemText_default","primary","Divider_default","List_default","components_LinkButton","drawer","defineProperty","breakpoints","up","width","flexShrink","drawerPaper","show","switchDrawer","Hidden_default","xsDown","implementation","Drawer_default","open","paper","components_DrawerContent","smUp","onClose","NavigationDrawer","root","marginLeft","header","menuButton","marginRight","display","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","ApplicationBar","ApplicationBarContainer","NavigationDrawerContainer","MessengerContainer","pages_Home","components","Message","handleInput","changeEditable","editable","responseControl","_this$state","forYou","Paper_default","userInfo","Avatar_default","avatar","alt","src","flexDirection","justifyContent","alignItems","backgroundColor","height","isMessageForYou","map","MessageContainer","key","renderMessages","MessagesList","MessagesListContainer","pages_Board","Answers","pages_Answers","loginSuccess","loginFailed","Login","logIn","password","redirectToPreviousRoute","from","pathname","Redirect","form","required","textAlign","maxWidth","redirect","result","usersData","user1","user2","user3","status","pages_Login","NotFound","isAuth","rest","objectWithoutProperties","es_Route","assign","render","App","Switch","Route","exact","Board","components_PrivateRoute","Home","Boolean","hostname","match","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","react_redux_es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.961b3981.chunk.js","sourcesContent":["export const initialState = {\n  messages: [\n    {\n      text: 'Hi dude!',\n      date: '9 нояб. 2018 г., 14:49:24',\n      author: 'user1',\n      receiver: 'user2',\n    },\n    {\n      text: 'Hello dude!',\n      date: '9 нояб. 2018 г., 14:49:25',\n      author: 'user3',\n      receiver: 'user1',\n    },\n  ],\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'SEND_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      }\n    default:\n      return state\n  }\n}\n","export const initialState = {\n  authorized: false,\n  login: '',\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n  case 'LOGIN_SUCCESS':\n    return {\n      authorized: true,\n      login: action.payload.login,\n    }\n  case 'LOGIN_FAILED':\n    return {\n      authorized: false,\n      login: '',\n      token: '',\n    }\n  default:\n    return state\n  }\n}\n","export const initialState = {\n  showDrawer: false,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n  case 'SWITCH_DRAWER':\n    return {\n      showDrawer: !state.showDrawer,\n    }\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport messages from './messages'\nimport user from './user'\nimport settings from './settings'\n\nexport default combineReducers({\n  messages: messages,\n  user: user,\n  settings: settings,\n})\n","export default function() {\n  const date = new Date()\n  const params = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }\n  return date.toLocaleDateString('ru', params)\n}\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport currentDate from '../../../helpers/currentDate'\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nclass MessageSender extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      message: e.currentTarget.value,\n    })\n  }\n\n  handleSubmit = () => {\n    const { sendMessage, login } = this.props\n    const { message } = this.state\n    sendMessage({\n      text: message,\n      date: currentDate(),\n      author: login,\n      receiver: null,\n    })\n    this.setState({\n      message: '',\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { message } = this.state\n    return (\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n        <TextField\n          onChange={this.handleChange}\n          fullWidth\n          id=\"standard-required\"\n          label=\"Текст сообщения\"\n          margin=\"normal\"\n          value={message}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\n          Отправить\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(MessageSender)\n","import { connect } from 'react-redux'\nimport { sendMessage } from '../actions'\nimport Messenger from './Messenger'\n\nconst mapStateToProps = state => ({\n  login: state.user.login,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => dispatch(sendMessage(message)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Messenger)\n","export const sendMessage = message => ({\n  type: 'SEND_MESSAGE',\n  message,\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LinkButton = ({ name, path }) => {\n  const location = window.location.hash\n  return (\n    <ListItem\n      selected={location === `#${path}`}\n      button\n      component={Link}\n      to={path}\n    >\n      <ListItemText primary={name} />\n    </ListItem>\n  )\n}\n\nexport default LinkButton\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport LinkButton from './LinkButton'\nimport List from '@material-ui/core/List'\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n})\n\nconst DrawerContent = ({ classes }) => {\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List component=\"nav\">\n        <LinkButton name=\"Все сообщения\" path=\"/\" />\n        <LinkButton name=\"Написать сообщение\" path=\"/messenger\" />\n        <LinkButton name=\"Ответы\" path=\"/answers\" />\n      </List>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DrawerContent)\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport { withStyles } from '@material-ui/core/styles'\nimport DrawerContent from './DrawerContent'\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: 300,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: 300,\n  },\n})\n\nconst NavigationDrawer = ({ classes, show, switchDrawer }) => {\n  return (\n    <div className={classes.drawer}>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={show}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={switchDrawer}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NavigationDrawer)\n","import { connect } from 'react-redux'\nimport NavigationDrawer from './NavigationDrawer'\nimport { switchDrawer } from '../actions/settings'\n\nconst mapStateToProps = state => ({\n  show: state.settings.showDrawer,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchDrawer: () => dispatch(switchDrawer()),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavigationDrawer)\n","export const switchDrawer = () => ({\n  type: 'SWITCH_DRAWER',\n})\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    marginLeft: 300,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${300}px)`,\n    },\n  },\n  header: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n})\n\nconst ApplicationBar = ({ classes, switchDrawer }) => {\n  return (\n    <AppBar className={classes.root} position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          className={classes.menuButton}\n          onClick={switchDrawer}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.header}>\n          Messages\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default withStyles(styles)(ApplicationBar)\n","import { connect } from 'react-redux'\nimport { switchDrawer } from '../actions/settings'\nimport ApplicationBar from './ApplicationBar'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchDrawer: () => dispatch(switchDrawer()),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ApplicationBar)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport MessengerContainer from './MessengerContainer'\nimport NavigationDrawer from '../../../components/NavigationDrawerContainer'\nimport ApplicationBar from '../../../components/ApplicationBarContainer'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Home = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MessengerContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Home)\n","import * as components from './components'\n\nexport default { components }\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport currentDate from '../helpers/currentDate'\n\nconst styles = {\n  root: {\n    margin: 5,\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  forYou: {\n    margin: 5,\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#b2d8b3',\n  },\n  userInfo: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 5,\n    width: 25,\n    height: 25,\n  },\n}\n\nclass Message extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editable: false,\n      message: '',\n    }\n  }\n\n  handleInput = e => {\n    this.setState({\n      message: e.currentTarget.value,\n    })\n  }\n\n  changeEditable = () => {\n    this.setState({ editable: !this.state.editable })\n  }\n\n  handleSubmit = () => {\n    const { sendMessage } = this.props\n    const { message } = this.state\n    sendMessage({\n      text: message,\n      date: currentDate(),\n      author: this.props.author,\n      receiver: this.props.message.author,\n    })\n  }\n\n  responseControl = () => {\n    const { authorized } = this.props\n    const { editable, message } = this.state\n    return (\n      authorized && (\n        <div>\n          <Button onClick={this.changeEditable}>Ответить</Button>\n          {editable && (\n            <TextField\n              onChange={this.handleInput}\n              fullWidth\n              id=\"standard-required\"\n              label=\"Текст сообщения\"\n              margin=\"normal\"\n              value={message}\n            />\n          )}\n          {editable && <Button onClick={this.handleSubmit}>Отправить</Button>}\n        </div>\n      )\n    )\n  }\n\n  render() {\n    const { message, classes, forYou } = this.props\n    return (\n      <Paper className={forYou ? classes.forYou : classes.root}>\n        <div className={classes.header}>\n          <div className={classes.userInfo}>\n            <Avatar\n              className={classes.avatar}\n              alt=\"Adelle Charles\"\n              src=\"https://cataas.com/cat\"\n            />\n            <Typography variant=\"h6\">{message.author}</Typography>\n          </div>\n          <Typography variant=\"caption\">{message.date}</Typography>\n        </div>\n        <Typography variant=\"headline\">\n          {message.receiver ? `${message.receiver}, ` : undefined}\n          {message.text}\n        </Typography>\n        {this.responseControl()}\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(Message)\n","import { connect } from 'react-redux'\nimport Message from './Message'\nimport { sendMessage } from '../actions/message'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => dispatch(sendMessage(message)),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Message)\n","export const sendMessage = message => ({\n  type: 'SEND_MESSAGE',\n  message,\n})\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Message from '../../../components/MessageContainer'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nconst renderMessages = (messages, receiver, authorized) => {\n  return messages.map(message => {\n    if (isMessageForYou(message.receiver, receiver)) {\n      return (\n        <Message\n          key={message.date}\n          message={message}\n          authorized={authorized}\n          forYou\n          author={receiver}\n        />\n      )\n    } else {\n      return (\n        <Message key={message.date} message={message} authorized={authorized} />\n      )\n    }\n  })\n}\n\nconst isMessageForYou = (receiver, user) => (receiver === user ? true : false)\n\nconst MessagesList = ({ classes, messages, receiver, authorized }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      <div>{renderMessages(messages, receiver, authorized)}</div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(MessagesList)\n","import { connect } from 'react-redux'\nimport MessagesList from './MessagesList'\n\nconst mapStateToProps = state => ({\n  messages: state.messages.messages,\n  receiver: state.user.login,\n  authorized: state.user.authorized,\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(MessagesList)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavigationDrawer from '../../../components/NavigationDrawerContainer'\nimport ApplicationBar from '../../../components/ApplicationBarContainer'\nimport MessagesListContainer from './MessagesListContainer'\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n}\n\nconst Board = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <MessagesListContainer />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Board)\n","import * as components from './components'\n\nexport default { components }\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport NavigationDrawer from '../../../components/NavigationDrawerContainer'\nimport ApplicationBar from '../../../components/ApplicationBarContainer'\nimport Message from '../../../components/MessageContainer'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  messages: {\n    width: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nconst renderMessages = (messages, receiver, authorized) => {\n  return messages.map(message => {\n    if (isMessageForYou(message.receiver, receiver)) {\n      return (\n        <Message key={message.date} message={message} authorized={authorized} />\n      )\n    }\n  })\n}\n\nconst isMessageForYou = (receiver, user) => (receiver === user ? true : false)\n\nconst Answers = ({ classes, messages, receiver, authorized }) => {\n  return (\n    <div className={classes.root}>\n      <ApplicationBar />\n      <NavigationDrawer />\n      <div className={classes.messages}>\n        <div className={classes.toolbar} />\n        <div>{renderMessages(messages, receiver, authorized)}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Answers)\n","import { connect } from 'react-redux'\nimport Answers from './Answers'\n\nconst mapStateToProps = state => ({\n  messages: state.messages.messages,\n  receiver: state.user.login,\n  authorized: state.user.authorized,\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Answers)\n","import * as components from './components'\n\nexport default { components }\n","import login from '../../helpers/login'\n\nexport const logIn = (payload, redirect) => {\n  return dispatch => {\n    const result = login(payload)\n    switch (result.status) {\n      case 200:\n        dispatch(loginSuccess(result))\n        redirect()\n        break\n      case 400:\n        dispatch(loginFailed(result))\n        break\n      default:\n        dispatch(loginFailed(result))\n        break\n    }\n  }\n}\n\nexport const loginSuccess = payload => ({\n  type: 'LOGIN_SUCCESS',\n  payload,\n})\n\nexport const loginFailed = payload => ({\n  type: 'LOGIN_FAILED',\n  payload,\n})\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Redirect } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport NavigationDrawer from '../../../components/NavigationDrawerContainer'\nimport ApplicationBar from '../../../components/ApplicationBarContainer'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    width: '100%',\n    textAlign: 'center',\n  },\n  toolbar: theme.mixins.toolbar,\n  form: {\n    maxWidth: 230,\n    display: 'inline-block',\n  },\n})\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      login: '',\n      password: '',\n      redirectToPreviousRoute: false,\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    })\n  }\n\n  handleSubmit = () => {\n    const { logIn } = this.props\n    logIn(\n      {\n        login: this.state.login,\n        password: this.state.password,\n      },\n      () =>\n        this.setState({\n          redirectToPreviousRoute: true,\n        })\n    )\n  }\n\n  render() {\n    const { classes, location } = this.props\n    const { login, password, redirectToPreviousRoute } = this.state\n    const { from } = location.state || { from: { pathname: '/' } }\n    if (redirectToPreviousRoute) {\n      return <Redirect to={from} />\n    }\n    return (\n      <div className={classes.root}>\n        <ApplicationBar />\n        <NavigationDrawer />\n        <div className={classes.content}>\n          <div className={classes.toolbar} />\n          <div className={classes.form}>\n            <TextField\n              name=\"login\"\n              onChange={this.handleChange}\n              fullWidth\n              required\n              id=\"login-required\"\n              label=\"Логин\"\n              margin=\"normal\"\n              value={login}\n              variant=\"outlined\"\n            />\n            <TextField\n              name=\"password\"\n              onChange={this.handleChange}\n              fullWidth\n              required\n              id=\"password-required\"\n              label=\"Пароль\"\n              margin=\"normal\"\n              value={password}\n              type=\"password\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleSubmit}\n            >\n              Отправить\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Login)\n","import { connect } from 'react-redux'\nimport { logIn } from '../actions'\nimport Login from './Login'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: (payload, redirect) => dispatch(logIn(payload, redirect)),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Login)\n","export default function(payload) {\n  const usersData = {\n    user1: { password: 'lol' },\n    user2: { password: 'lol' },\n    user3: { password: 'lol' },\n  }\n  const login = payload.login\n  const password = payload.password\n  if (login in usersData) {\n    if (usersData[login].password === password) {\n      return {\n        status: 200,\n        text: 'Success!',\n        login: login,\n      }\n    } else {\n      return { status: 400, text: 'Login or password are wrong!' }\n    }\n  } else {\n    return { status: 400, text: 'Login or password are wrong!' }\n  }\n}\n","import * as components from './components'\n\nexport default { components }\n","import React from 'react'\n\nconst NotFound = () => {\n  return <div>NotFound</div>\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        rest.isAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.user.authorized,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PrivateRoute)\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router'\nimport Home from './pages/Home'\nimport Board from './pages/Board'\nimport Answers from './pages/Answers'\nimport Login from './pages/Login'\nimport NotFound from './components/NotFound'\nimport PrivateRoute from './components/PrivateRoute'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Board.components.Board} />\n          <PrivateRoute path=\"/messenger\" component={Home.components.Home} />\n          <PrivateRoute\n            path=\"/answers\"\n            component={Answers.components.Answers}\n          />\n          <Route exact path=\"/login\" component={Login.components.Login} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport thunk from 'redux-thunk'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducers'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst middleware = [thunk]\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}